@using System.Text
@if (string.IsNullOrEmpty(Value))
{
    <RadzenText TextStyle="TextStyle.Body2">

    </RadzenText>
}
else if (IsVisible)
{
    <RadzenText TextStyle="TextStyle.Body2">
        @Value <span class="rz-link ml-1" @onclick="@(() => IsVisible = false)">Hide</span>
        @if (ShowCopy)
        {
            <CopyClipboard Value="@Value"></CopyClipboard>
        }
    </RadzenText>
}
else
{
    <RadzenText TextStyle="TextStyle.Body2">
        @GetMask() <span class="rz-link ml-1" @onclick="@(() => IsVisible = true)">Show</span>
        @if (ShowCopy)
        {
            <CopyClipboard Value="@Value"></CopyClipboard>
        }
    </RadzenText>
}

@code {
    [Parameter]
    public string? Value { get; set; }

    [Parameter]
    public bool IsEmail { get; set; }

    [Parameter]
    public bool IsIp { get; set; }

    [Parameter]
    public bool ShowCopy { get; set; }

    private bool IsVisible { get; set; }

    public string? GetMask()
    {
        if (string.IsNullOrEmpty(Value))
            return Value;

        if (IsIp)
        {
            bool FirstDot = false;
            StringBuilder result = new StringBuilder();
            foreach (char c in Value)
            {
                if (c == '.')
                {
                    result.Append(c);
                    FirstDot = true;
                }
                else
                {
                    if (FirstDot)
                        result.Append('*');
                    else
                        result.Append(c);
                }
            }
            return result.ToString();
        }
        if (IsEmail)
        {
            StringBuilder result = new StringBuilder();
            bool AtSignDone = false;
            foreach(char c in Value)
            {
                if (AtSignDone)
                {
                    result.Append(c);
                }
                else
                {
                    if (c == '@')
                    {
                        AtSignDone = true;
                        result.Append(c);
                    }
                    else
                        result.Append('*');
                }
            }
            return result.ToString();
        }

        return new String(Value.Select(x => '*').ToArray());
    }
}
