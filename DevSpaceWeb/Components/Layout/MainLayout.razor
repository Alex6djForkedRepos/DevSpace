@using DevSpaceWeb.Components.Dialogs
@using DevSpaceWeb.Components.Layout.Nav
@using DevSpaceWeb.Components.Layout.Sidebar
@using DevSpaceWeb.Models.Account
@using Radzen.Blazor
@inherits LayoutComponentBase
@inject Radzen.DialogService dialogService

<RadzenComponents @rendermode="Program.RenderMode" />

<RadzenLayout>
    <RadzenHeader>
        @if (Session.State.User.Identity != null && Session.State.User.Identity.IsAuthenticated)
        {
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Wrap="FlexWrap.NoWrap" Gap="4px" Style="width: 100%;">
                <div>
                    <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" Gap="0">
                        <RadzenSidebarToggle Click="@(() => SidebarExpanded = !SidebarExpanded)" Style="border: none !important;" />
                        <h6 class="mt-2 top-title">@_Data.Config.Instance.Name</h6>
                        <div class="top-divider"></div>
                    </RadzenStack>
                </div>
                <div>
                    <div class="pc-only">
                        <NavSearch></NavSearch>
                    </div>
                </div>
                <div>
                    <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" Gap="8px">
                        @if (Program.IsDevMode)
                        {
                            <div class="pc-only">
                                <NavDebug></NavDebug>
                            </div>
                        }
                        <div class="pc-only">
                            <NavInfo></NavInfo>
                        </div>

                        <div class="pc-only">
                            <NavTools></NavTools>
                        </div>
                        
                        @* <div class="pc-only">
                            <NavBookmarks></NavBookmarks>
                        </div> *@
                        
                        <div class="pc-only">
                            <NavNotifications></NavNotifications>
                        </div>
                        <RadzenMenu ClickToOpen="false" Responsive="false" Style="margin-right: 10px;">
                            <RadzenMenuItem id="NavUser">
                                <Template>
                                    <img class="img-round" src="@Session.CurrentUser?.GetAvatarOrDefault()" /> @Session.CurrentUser?.GetCurrentName()
                                </Template>
                                <ChildContent>
                                    <RadzenMenuItem Path="/user/account">
                                        <Template>
                                            <span class="iconify mr-2" data-icon="mdi:account-circle"></span> Account
                                        </Template>
                                    </RadzenMenuItem>
                                    @if (Session.IsInstanceAdmin)
                                    {
                                        <RadzenMenuItem Path="/admin">
                                            <Template>
                                                <span class="iconify mr-2" data-icon="mdi:tools"></span> Admin
                                            </Template>
                                        </RadzenMenuItem>
                                    }
                                    <RadzenMenuItem Path="/logout">
                                        <Template>
                                            <span class="iconify mr-2" data-icon="mdi:logout-variant"></span> Logout
                                        </Template>
                                    </RadzenMenuItem>
                                </ChildContent>

                            </RadzenMenuItem>
                        </RadzenMenu>
                    </RadzenStack>
                </div>
            </RadzenStack>


        }
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@SidebarExpanded" id="MainSidebar">
        @if (Session.State.User.Identity != null && Session.State.User.Identity.IsAuthenticated)
        {
            <NavMenu />
        }
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-main-body rz-p-1">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>


<style>
    :root {
    --rz-sidebar-width: 260px;
    --rz-input-shadow: none !important;
    }

    .rz-popup {
        display: none;
        position: absolute;
        overflow: hidden;
        border: var(--rz-panel-border);
        background-color: var(--rz-menu-background-color);
        box-shadow: var(--rz-context-menu-box-shadow);
        border-radius: var(--rz-border-radius);
        padding: 4px;
    }


    .twofactor-item .iconify {
        color: #0bba83 !important;
        width: 32px;
        height: 32px;
        float: left;
        margin-right: 10px;
    }

    .twofactor-item {
        display: block !important;
        height: 52px;
        margin-bottom: 6px;
        background-color: #272731 !important;
        border-radius: 16px;
        padding: 6px;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 8px;
        cursor: pointer;
    }

        .twofactor-item h4 {
            margin-top: 0px !important;
        }

        .twofactor-item p {
            margin-top: -14px !important;
        }

    .twofactor-item-disabled {
        opacity: 0.5;
        background-color: rgba(39,40,49,0.4) !important;
        color: rgb(130,129,129) !important;
        cursor: default !important;
    }



    input:focus {
        box-shadow: none !important;
    }


    .top-divider {
        align-self: stretch;
        margin-top: 6px;
        margin-bottom: 6px;
        margin-left: 14px;
        margin-right: 14px;
        border-style: none solid none none;
        border-color: var(--rz-base-600);
        border-width: 1px;
    }

    .rz-navigation-item-disabled {
        opacity: 0.5 !important;
    }

    #NavUser img {
        width: 26px;
        height: 26px !important;
        border-radius: 180px;
        margin-right: 6px;
    }


    .rz-navigation-item-link p {
        font-size: var(--rz-text-subtitle1-font-size);
        margin-bottom: 0;
    }

    .rz-notification-content {
        max-width: 220px !important;
    }

    .rz-dialog {
        max-height: calc(100vh - 110px) !important;
    }

    .rz-text-body2:before {
        content: "";
        display: inline-block;
    }

    .rz-popup .rz-navigation-item-wrapper .rzi {
        font-variation-settings: 'FILL' 1;
    }

    .rz-datatable-loading {
        background: none;
    }

    .rz-datatable-loading-content {
        position: static !important;
        left: 0 !important;
        top: 0 !important;
        transform: none !important;
        padding: 1rem;
        padding-top: 7px !important;
    }
</style>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    bool SidebarExpanded = true;
}
