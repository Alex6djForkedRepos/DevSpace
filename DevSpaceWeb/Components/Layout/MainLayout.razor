@using DevSpaceWeb.Components.Dialogs
@using DevSpaceWeb.Components.Layout.Nav
@using DevSpaceWeb.Models.Account
@using Radzen.Blazor
@inherits LayoutComponentBase
@inject Radzen.DialogService dialogService

<RadzenComponents />

<RadzenLayout>
    <RadzenHeader>
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" Gap="0">
            <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" Style="border: none !important;" />
            <RadzenText class="top-title" TextStyle="TextStyle.H6">
                Dev Space
            </RadzenText>
            <div class="top-divider"></div>
            @if (Session.State.User.Identity != null && Session.State.User.Identity.IsAuthenticated)
            {
                @if (!Program.IsPreviewMode)
                {
                    <RadzenMenu ClickToOpen="false">
                        <RadzenMenuItem Text="General">
                            <RadzenMenuItem Text="Http Codes" Path="/info/http"></RadzenMenuItem>
                        </RadzenMenuItem>
                        <RadzenMenuItem Text="Tools">
                            <RadzenMenuItem Path="/tools/editor" Text="Text Editor"></RadzenMenuItem>
                            <RadzenMenuItem Text="Images">
                                <RadzenMenuItem Path="/tools/image/convert" Text="Convert Images"></RadzenMenuItem>
                            </RadzenMenuItem>
                        </RadzenMenuItem>
                    </RadzenMenu>
                }
                <div style="flex-grow: 1 !important;"></div>
                @if (Program.IsPreviewMode)
                {
                    <RadzenMenu id="NavPreview" ClickToOpen="false">
                        <RadzenMenuItem Text="Preview Mode">
                            <RadzenMenuItem Text="Change Background" Click="@ChangeBackgroundDialog"></RadzenMenuItem>
                        </RadzenMenuItem>
                    </RadzenMenu>
                }
                <RadzenMenu ClickToOpen="false">
                    <RadzenMenuItem id="NavUser" Text="@Session.State.User.Identity.Name">
                        <RadzenMenuItem Path="/user/account" Text="Account"></RadzenMenuItem>
                        <RadzenMenuItem Text="Change Background" Click="@ChangeBackgroundDialog"></RadzenMenuItem>
                        @if (!Program.IsPreviewMode)
                        {
                            <RadzenMenuItem Path="/admin" Text="Admin"></RadzenMenuItem>
                        }
                        <RadzenMenuItem Path="/logout" Text="Logout"></RadzenMenuItem>
                    </RadzenMenuItem>
                </RadzenMenu>
                <div style="width: 30px;"></div>
            }

        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
        @if (Session.State.User.Identity != null && Session.State.User.Identity.IsAuthenticated)
        {
            <NavMenu />
        }
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-1">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>


<style>
    .twofactor-item .iconify {
    color: #0bba83 !important;
    width: 32px;
    height: 32px;
    float: left;
    margin-right: 10px;
    }

    .twofactor-item {
    display: block !important;
    height: 52px;
    margin-bottom: 6px;
    background-color: #272731 !important;
    border-radius: 16px;
    padding: 6px;
    padding-left: 10px;
    padding-right: 10px;
    padding-top: 8px;
    cursor: pointer;
    }

    .twofactor-item-disabled {
    opacity: 0.5;
    background-color: rgba(39,40,49,0.4) !important;
    color: rgb(130,129,129) !important;
    cursor: default !important;
    }

    :root {
    --rz-sidebar-width: 230px;
    --rz-input-shadow: none !important;
    }

    input:focus {
    box-shadow: none !important;
    }


    .top-divider {
    align-self: stretch;
    margin-top: 6px;
    margin-bottom: 6px;
    margin-left: 14px;
    margin-right: 14px;
    border-style: none solid none none;
    border-color: var(--rz-base-600);
    border-width: 1px;
    }

    .rz-navigation-item-disabled {
        opacity: 0.5 !important;
    }
</style>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; }

    bool sidebar1Expanded = true;


    public async Task ChangeBackgroundDialog()
    {
        if (Program.IsPreviewMode)
        {
            await dialogService.ShowDynamicFormAsync<AccountBackgroundModel>("Change Background", new AccountBackgroundModel() { BackgroundUrl = Session.BackgroundUrl }, (AccountBackgroundModel data) =>
            {
                Session.BackgroundUrl = data.BackgroundUrl;
                Session.TriggerChange();
                return null;
            });
        }
        else
        {
            await dialogService.OpenAsync<ChangeAccountBackgroundDialog>("Change Background");
        }
    }
}
