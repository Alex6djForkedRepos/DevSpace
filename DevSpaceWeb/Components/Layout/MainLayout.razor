@using DevSpaceWeb.Components.Dialogs
@using DevSpaceWeb.Components.Layout.Nav
@using Radzen.Blazor
@inherits LayoutComponentBase
@inject Radzen.DialogService dialogService

<RadzenComponents />

<RadzenLayout>
    <RadzenHeader>
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" Gap="0">
            <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" Style="border: none !important;" />
            <RadzenText class="top-title" Style="color: var(--rz-text-color) !important;" TextStyle="TextStyle.H6" TagName="TagName.P">Dev Space</RadzenText>
            <div class="top-divider"></div>
            <RadzenMenu ClickToOpen="false">
                <RadzenMenuItem Text="General">
                    <RadzenMenuItem Text="Http Codes" Path="/info/http"></RadzenMenuItem>
                </RadzenMenuItem>
                <RadzenMenuItem Text="Tools">
                    <RadzenMenuItem Text="Text Editor"></RadzenMenuItem>
                    <RadzenMenuItem Text="Images">
                        <RadzenMenuItem Text="Convert Images"></RadzenMenuItem>
                    </RadzenMenuItem>
                </RadzenMenuItem>
            </RadzenMenu>
            @if (Session.State.User.Identity.IsAuthenticated)
            {
                <div style="flex-grow: 1 !important;"></div>
                @if (Program.IsPreviewMode)
                {
                    <RadzenMenu id="NavPreview" ClickToOpen="false">
                        <RadzenMenuItem Text="Preview Mode">
                            <RadzenMenuItem Text="Change Background" Click="@(() => dialogService.Open<ChangeBackgroundDialog>("Change Background"))"></RadzenMenuItem>
                        </RadzenMenuItem>
                    </RadzenMenu>
                }
                <RadzenMenu ClickToOpen="false">
                    <RadzenMenuItem id="NavUser" Text="@Session.State.User.Identity.Name">
                        <RadzenMenuItem Path="/user/settings" Text="Settings"></RadzenMenuItem>
                        <RadzenMenuItem Path="/admin" Text="Admin"></RadzenMenuItem>
                        <RadzenMenuItem Path="/logout" Text="Logout"></RadzenMenuItem>
                    </RadzenMenuItem>
                </RadzenMenu>
                <div style="width: 30px;"></div>
            }

        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
        @if (Session.State.User.Identity.IsAuthenticated)
        {
            <NavMenu />
        }
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-1">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>

@* <MudLayout>
    @if (Session.SessionError == SessionProvider.SessionErrorType.SessionSecurityNewIp)
    {
        <DevSpaceWeb.Components.Auth.NewIpPage Session="Session"></DevSpaceWeb.Components.Auth.NewIpPage>
    }
    else
    {
        <MudAppBar Fixed="true" Dense="true" Elevation="1">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <h3 class="top-title">Dev Space</h3>
            <MudDivider Vertical="true" FlexItem="true" DividerType="DividerType.Middle" />
            @if (Session.State.User.Identity.IsAuthenticated)
            {
                <MudMenu Label="Info" Variant="Variant.Text" TransformOrigin="Origin.TopLeft" AnchorOrigin="Origin.BottomLeft" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" IconColor="Color.Default" Dense>
                    <MudMenuItem Href="/info/http">Http Codes</MudMenuItem>
                </MudMenu>
                <MudMenu Label="Tools" Variant="Variant.Text" TransformOrigin="Origin.TopLeft" AnchorOrigin="Origin.BottomLeft" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" IconColor="Color.Default" Dense>
                    <MudMenuItem Class="mud-menu-sub">
                        <MudMenu ActivationEvent="MouseEvent.MouseOver" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopLeft" Variant="Variant.Text" Color="Color.Primary" EndIcon="@Icons.Material.Filled.ArrowRight" Dense>
                            <ActivatorContent>
                                <MudMenuItem>Images</MudMenuItem>
                            </ActivatorContent>

                            <ChildContent>
                                <MudMenuItem Href="/tools/image/convert">Convert Image Format</MudMenuItem>
                            </ChildContent>
                        </MudMenu>
                    </MudMenuItem>
                    <MudMenuItem Href="/tools/editor">Text Editor</MudMenuItem>
                </MudMenu>
                <MudSpacer></MudSpacer>
                @if (Program.IsPreviewMode)
                {
                    <MudMenu AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                        <ActivatorContent>
                            <MudButton Class="mr-2" Variant="Variant.Text" Color="Color.Warning">Preview Mode</MudButton>
                        </ActivatorContent>
                        <ChildContent>
                            <MudMenuItem OnClick="@(() => DialogService.Show<ChangeBackgroundDialog>())">Change Background</MudMenuItem>
                        </ChildContent>
                    </MudMenu>
                }
                <MudMenu AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                    <ActivatorContent>
                        <MudButton Variant="Variant.Text" Color="Color.Info">@Session.State.User.Identity.Name</MudButton>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem Href="/user/settings">Settings</MudMenuItem>
                        <MudMenuItem Href="/admin">Admin</MudMenuItem>
                        <MudMenuItem Href="/logout">Logout</MudMenuItem>
                    </ChildContent>
                </MudMenu>
            }
        </MudAppBar>
        <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Variant="DrawerVariant.Responsive">
            @if (Session.State.User.Identity.IsAuthenticated)
            {
                <NavMenu />
            }
        </MudDrawer>
        <MudMainContent>
            @Body
        </MudMainContent>
    }
</MudLayout> *@


<style>
    .twofactor-item .iconify {
        color: #0bba83 !important;
        width: 32px;
        height: 32px;
        float: left;
        margin-right: 10px;
    }

    .twofactor-item {
        display: block !important;
        height: 52px;
        margin-bottom: 6px;
        background-color: #272731 !important;
        border-radius: 16px;
        padding: 6px;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 8px;
        cursor: pointer;
    }

    .twofactor-item-disabled {
        opacity: 0.5;
        background-color: rgba(39,40,49,0.4) !important;
        color: rgb(130,129,129) !important;
        cursor: default !important;
    }

    :root {
        --rz-sidebar-width: 230px;
        --rz-input-shadow: none !important;
    }

    input:focus {
        box-shadow: none !important;
    }


    .top-divider {
        align-self: stretch;
        margin-top: 6px;
        margin-bottom: 6px;
        margin-left: 14px;
        margin-right: 14px;
        border-style: none solid none none;
        border-color: var(--rz-base-600);
        border-width: 1px;
    }
</style>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; }

    bool _drawerOpen = true;
    bool sidebar1Expanded = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
