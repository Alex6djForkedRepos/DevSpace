@inject ContextMenuService ContextMenuService
@inject NavigationManager Nav

<div class="nav-list nav-list-sub">
    <RadzenLink Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/home")" ContextMenu="@((arg) => ShowContextMenuWithContent(arg))">
        <div class="nav-list-header">
            <span class="iconify" data-icon="mdi:server" style="color: #a5a5a5 !important;"></span>
            <h5 style="color: var(--rz-menu-top-item-color) !important; text-decoration: none !important; height: 40px;">@Session.Selected.Server.Name</h5>
        </div>
    </RadzenLink>

    <RadzenPanelMenu>
        <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/home")" Match="NavLinkMatch.All">
            <Template>
                <span class="iconify" data-icon="mdi:home"></span>
                <p>Home</p>
            </Template>
        </RadzenPanelMenuItem>

        <RadzenPanelMenuItem @bind-Expanded="DockerExpanded" Click="(() => ToolsExpanded = false)"  Match="NavLinkMatch.Prefix">
            <Template>
                <span class="iconify" data-icon="mdi:docker"></span>
                <p>Docker</p>
            </Template>
            <ChildContent>
                <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/stacks")" Match="NavLinkMatch.Prefix">
                    <Template>
                        <span class="iconify" data-icon="ri:stack-fill"></span>
                        <p>Stacks</p>
                    </Template>
                </RadzenPanelMenuItem>
                <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/containers")" Match="NavLinkMatch.Prefix">
                    <Template>
                        <span class="iconify" data-icon="ri:box-3-fill"></span>
                        <p>Containers</p>
                    </Template>
                </RadzenPanelMenuItem>
                <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/images")" Match="NavLinkMatch.Prefix">
                    <Template>
                        <span class="iconify" data-icon="mdi:folder-image"></span>
                        <p>Images</p>
                    </Template>
                </RadzenPanelMenuItem>
                <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/volumes")" Match="NavLinkMatch.Prefix">
                    <Template>
                        <span class="iconify" data-icon="mdi:storage"></span>
                        <p>Volumes</p>
                    </Template>
                </RadzenPanelMenuItem>
                <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/networks")" Match="NavLinkMatch.Prefix">
                    <Template>
                        <span class="iconify" data-icon="mdi:local-area-network"></span>
                        <p>Networks</p>
                    </Template>
                </RadzenPanelMenuItem>
                <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/templates")" Match="NavLinkMatch.Prefix">
                    <Template>
                        <span class="iconify" data-icon="mdi:application-brackets"></span>
                        <p>Templates</p>
                    </Template>
                </RadzenPanelMenuItem>
                <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/registry")" Match="NavLinkMatch.Prefix">
                    <Template>
                        <span class="iconify" data-icon="mdi:table"></span>
                        <p>Registry</p>
                    </Template>
                </RadzenPanelMenuItem>
                <RadzenPanelMenuItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/plugins")" Match="NavLinkMatch.Prefix">
                    <Template>
                        <span class="iconify" data-icon="mdi:power-plug"></span>
                        <p>Plugins</p>
                    </Template>
                </RadzenPanelMenuItem>
            </ChildContent>
        </RadzenPanelMenuItem>
    </RadzenPanelMenu>
</div>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; }

    [Parameter]
    public bool StateChange { get; set; }

    public TeamData? Team => Session.Selected.Team?.Data;
    public ServerData Server => Session.Selected.Server;
    public TeamMemberData Member => Session.Selected.Member;

    public bool DockerExpanded { get; set; } = true;
    public bool ToolsExpanded { get; set; }

    void ShowContextMenuWithContent(MouseEventArgs args) => ContextMenuService.Open(args, new List<ContextMenuItem> {
                new ContextMenuItem(){ Text = "Close", Icon = "close"  },
                new ContextMenuItem(){ Text = "Settings", Icon = "settings", Disabled = !Member.HasServerPermission(Team, Server, ServerPermission.ManageServer) },
                new ContextMenuItem(){ Text = "Permissions", Icon = "key", Disabled = !Member.HasServerPermission(Team, Server, ServerPermission.ViewPermissions) },
         }, OnMenuItemClick);

    void OnMenuItemClick(MenuItemEventArgs arg)
    {
        switch (arg.Text)
        {
            case "Close":
                Session.Selected.Team.Server.IsVisible = false;
                Session.TriggerNavMenuChange();
                break;
            case "Settings":
                Nav.NavigateTo("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/settings");
                break;
            case "Permissions":
                Nav.NavigateTo("/teams/" + Session.Selected.Team.VanityUrl + "/servers/" + Session.Selected.Team.Server.VanityUrl + "/permissions");
                break;
        }
        ContextMenuService.Close();
    }
}