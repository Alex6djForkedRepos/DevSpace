@using DevSpaceWeb.Components.Layout.Nav
@implements IDisposable

<div class="pl-2 pr-2 mt-2 mobile-only">
    <NavSearch IsMobile="true"></NavSearch>
    <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" Gap="8px" class="mt-2">
        @* <NavInfo></NavInfo>
        <NavTools></NavTools>
        <NavBookmarks></NavBookmarks>
        <NavTasks></NavTasks>
        <NavNotifications></NavNotifications> *@
    </RadzenStack>
</div>

<div class="sidebar-nav">
    <RadzenPanelMenu Match="NavLinkMatch.All">
    <RadzenPanelMenuItem Path="@("/teams")" Match="NavLinkMatch.All" Style="font-size: var(--rz-text-subtitle1-font-size);">
        <Template>
            <span class="iconify" data-icon="mdi:account-supervisor-circle"></span>
            My Teams
        </Template>
    </RadzenPanelMenuItem>
        <RadzenPanelMenuItem Path="@("/previews")" Match="NavLinkMatch.Prefix" Style="font-size: var(--rz-text-subtitle1-font-size);">
            <Template>
                <span class="iconify" data-icon="mdi:lightbulb"></span>
                <p>
                    Previews
                </p>
            </Template>
        </RadzenPanelMenuItem>

    @if (Session.Selected.Team != null)
        {
            <NavTeam StateChange="@StateChange"></NavTeam>

            @if (Session.Selected.Team.Server != null && Session.Selected.Team.Server.IsVisible)
            {
                <NavServer StateChange="@StateChange"></NavServer>
            }


            @if (Session.Selected.Team.Console != null && Session.Selected.Team.Console.IsVisible)
            {
                <NavConsole StateChange="@StateChange"></NavConsole>
            }

            @if (Session.Selected.Team.Website != null && Session.Selected.Team.Website.IsVisible)
            {
                <NavWebsite StateChange="@StateChange"></NavWebsite>
            }

            @if (Session.Selected.Team.Project != null && Session.Selected.Team.Project.IsVisible)
            {
                <NavProject StateChange="@StateChange"></NavProject>
            }
            @if (Session.Selected.Team.Log != null && Session.Selected.Team.Log.IsVisible)
            {
                <NavLog StateChange="@StateChange"></NavLog>
            }
        }
</RadzenPanelMenu>
</div>
@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    public bool StateChange { get; set; } = false;

    protected override void OnInitialized()
    {
        Session.EventNavMenuChange += UpdateState;
    }

    void IDisposable.Dispose()
    {
        Session.EventNavMenuChange -= UpdateState;
    }

    public void UpdateState(object sender, EventArgs e)
    {
        StateChange = !StateChange;
        StateHasChanged();
    }
}
