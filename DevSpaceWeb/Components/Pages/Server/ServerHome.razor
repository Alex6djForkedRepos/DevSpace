@using DevSpaceShared.Events.Docker
@using DevSpaceShared.Responses
@using DevSpaceShared.Services
@using DevSpaceShared.WebSocket
@using DevSpaceWeb.Agents
@inject DialogService Dialogs
@inject NavigationManager Nav
@inject NotificationService Notifications
@inject IJSRuntime JS

<PageTitle>@(Server?.Name ?? "Server") Home | @_Data.Config.Instance.Name</PageTitle>

<div class="dash-box dash-box-content">
    <div class="dash-box-header">
        <div class="dash-box-icon dash-box-back" onclick="history.back()">
            <iconify-icon icon="mdi:server"></iconify-icon>
            <iconify-icon icon="mdi:arrow-left-thick"></iconify-icon>
        </div>
        <RadzenText TextStyle="TextStyle.H6">Server</RadzenText>
    </div>
    @if (Permissions.CheckFailedServerPermissions(Member, Team, Server, ServerPermission.ViewServer, out ServerPermission? failedPerm))
    {
        <br />
        <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
            You do not have permission for @Utils.FriendlyName(failedPerm.ToString()!)
        </RadzenAlert>
    }
    else if (Server == null || !Server.IsConnected)
    {
        <br />
        <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Darker" AllowClose="false" Size="AlertSize.Small">
            Failed to connect to the server.
        </RadzenAlert>
        
    }
    else
    {
        <br />
        <RadzenRow Gap="10px" RowGap="10px">
            <RadzenColumn SizeMD="6" SizeSM="12" class="settings-box">
                <h6>System</h6>
                <RadzenRow Gap="10px" RowGap="10px" class="mt-4">
                    <RadzenColumn SizeSM="12">
                        <RadzenStack Orientation="Orientation.Horizontal">
                            <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:information"></iconify-icon>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-05">
                                    Version
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @(Data.IsWindows ? "Windows (Docker Desktop)" : Data.OperatingSystem)
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:timer"></iconify-icon>
                            </div>
                            <div style="overflow: hidden;">
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Uptime
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @(Data.IsWindows ? "Unavailable" : Data.GetUptimeText())
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }
                            </div>
                        </RadzenStack>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:wide-area-network"></iconify-icon>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    IP
                                </RadzenText>
                                @if (Data != null)
                                {
                                    @if (Member != null && (Member.HasServerPermission(Team, Server, ServerPermission.ViewHostInfo) || Member.HasServerPermission(Team, Server, ServerPermission.ManageConnection)))
                                    {
                                        <RadzenTextMask Value="@Server?.AgentIp" Type="RadzenTextMaskType.IP"></RadzenTextMask>
                                    }
                                    else
                                    {
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            Hidden
                                        </RadzenText>
                                    }
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:cpu-64-bit"></iconify-icon>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    CPU
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @(Data.IsWindows ? "Unavailable" : Data.CpuCount)
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:memory"></iconify-icon>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Memory
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @(Data.IsWindows ? "Unavailable" : Utils.ToPrettySize(Data.RamTotal))
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:storage"></iconify-icon>
                            </div>
                            <div style="overflow: hidden;">
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Storage
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @(Data.IsWindows ? "Unavailable" : $"{Utils.SizeSuffix(Data.StorageTotalSize - Data.StorageFreeSize, 0)} / {Utils.SizeSuffix(Data.StorageTotalSize, 0)} ({100 * (Data.StorageTotalSize - Data.StorageFreeSize) / Data.StorageTotalSize}%)")
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:dot-net"></iconify-icon>
                            </div>
                            <div style="overflow: hidden;">
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Agent
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @($"v{Data.AgentVersion} (.NET {Data.AgentNET})")
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </RadzenColumn>
                </RadzenRow>
                @if (Data != null && !string.IsNullOrEmpty(Program.LatestAgentVersion) && Program.LatestAgentVersion != Data.AgentVersion)
                {
                    <a target="_blank" href="https://github.com/FluxpointDev/DevSpace/releases">
                        <RadzenAlert AlertStyle="AlertStyle.Success" class="mt-4" Icon="download" Size="AlertSize.Small" AllowClose="false" Variant="Variant.Filled" Shade="Shade.Darker">
                            <strong>@("v" + Program.LatestAgentVersion)</strong> agent is available to install on this server.
                        </RadzenAlert>
                    </a>
                }
            </RadzenColumn>
            <RadzenColumn SizeMD="6" SizeSM="12" class="settings-box">
                <h6>Docker</h6>
                <RadzenRow Gap="10px" RowGap="10px" class="mt-4">
                    <RadzenColumn SizeSM="12">
                        <RadzenStack Orientation="Orientation.Horizontal">
                            <iconify-icon class="iconify settings-icon" style="color: var();" icon="mdi:docker"></iconify-icon>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-05">
                                    Version
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @Data.Docker.DockerVersion
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/stacks")">
                            <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                                <div>
                                    <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="ri:stack-fill"></iconify-icon>
                                </div>
                                <div>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                        Stacks
                                    </RadzenText>
                                    @if (Data != null)
                                    {
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            @Data.Docker.Stacks
                                        </RadzenText>
                                    }
                                    else
                                    {
                                        <RadzenSkeleton></RadzenSkeleton>
                                    }

                                </div>
                            </RadzenStack>
                        </a>

                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/containers")">
                            <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                                <div>
                                    <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="ri:box-3-fill"></iconify-icon>
                                </div>
                                <div>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                        Containers
                                    </RadzenText>
                                    @if (Data != null)
                                    {
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            @Data.Docker.AllContainers
                                        </RadzenText>
                                        <div class="session-item-stat">
                                            <RadzenText TextStyle="TextStyle.Body2">
                                                <RadzenIcon Icon="power_settings_new" IconStyle="IconStyle.Success"></RadzenIcon> @Data.Docker.RunningContainers
                                            </RadzenText>
                                            <RadzenText TextStyle="TextStyle.Body2">
                                                <RadzenIcon Icon="power_settings_new" IconStyle="IconStyle.Danger"></RadzenIcon> @Data.Docker.StoppedContainers
                                            </RadzenText>
                                        </div>
                                    }
                                    else
                                    {
                                        <RadzenSkeleton></RadzenSkeleton>
                                    }

                                </div>
                            </RadzenStack>
                        </a>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/images")">
                            <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                                <div>
                                    <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:folder-image"></iconify-icon>
                                </div>
                                <div>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                        Images
                                    </RadzenText>
                                    @if (Data != null)
                                    {
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            @Data.Docker.Images
                                        </RadzenText>
                                    }
                                    else
                                    {
                                        <RadzenSkeleton></RadzenSkeleton>
                                    }

                                </div>
                            </RadzenStack>
                        </a>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/volumes")">
                            <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                                <div>
                                    <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:storage"></iconify-icon>
                                </div>
                                <div>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                        Volumes
                                    </RadzenText>
                                    @if (Data != null)
                                    {
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            @Data.Docker.Volumes
                                        </RadzenText>
                                    }
                                    else
                                    {
                                        <RadzenSkeleton></RadzenSkeleton>
                                    }

                                </div>
                            </RadzenStack>
                        </a>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/networks")">
                            <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                                <div>
                                    <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:local-area-network"></iconify-icon>
                                </div>
                                <div>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                        Networks
                                    </RadzenText>
                                    @if (Data != null)
                                    {
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            @Data.Docker.Networks
                                        </RadzenText>
                                    }
                                    else
                                    {
                                        <RadzenSkeleton></RadzenSkeleton>
                                    }

                                </div>
                            </RadzenStack>
                        </a>
                    </RadzenColumn>
                    <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                        <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/plugins")">
                            <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                                <div>
                                    <iconify-icon class="iconify settings-icon" style="color: #EAEBEC;" icon="mdi:power-plug"></iconify-icon>
                                </div>
                                <div>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                        Plugins
                                    </RadzenText>
                                    @if (Data != null)
                                    {
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            @Data.Docker.Plugins
                                        </RadzenText>
                                    }
                                    else
                                    {
                                        <RadzenSkeleton></RadzenSkeleton>
                                    }

                                </div>
                            </RadzenStack>
                        </a>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenColumn>
        </RadzenRow>
    }
</div>

@if (Server != null && Server.AgentType == ServerAgentType.Edge && !Server.IsAgentSetupComplete && Member != null && Member.HasServerPermission(Team, Server, ServerPermission.ServerAdministrator))
{
    <div class="dash-box dash-box-content">
        <div class="dash-box-header">
        <div class="dash-box-icon">
            <iconify-icon icon="mdi:wrench-cog"></iconify-icon>
        </div>
        <RadzenText TextStyle="TextStyle.H6">Setup Required</RadzenText>
        </div>
        <br />
        <RadzenText TextStyle="TextStyle.Body2">Run this command to setup your server and the edge agent.</RadzenText>
        <RadzenText TextStyle="TextStyle.Body2" style="padding: 8px; padding-top: 0px !important; padding-bottom: 16px !important; background-color: var(--rz-input-background-color);">
            <span style="display: block;">docker run -d --name devspace-agent </span>
            <span style="display: block;">--pull always </span>
            <span style="display: block;">--restart on-failure:3 </span>
            <span style="display: block;">-e EDGE_HOST=@_Data.Config.Instance.PublicDomain </span>
            <span style="display: block;">-e EDGE_ID=@Server.Id.ToString() </span>
            <span style="display: block;">-e EDGE_KEY=@Server.AgentKey </span>
            <span style="display: block;">-v devspace_agent:/app/Data </span>
            <span style="display: block;">-v /var/run/docker.sock:/var/run/docker.sock:ro </span>
            <span style="display: block;">-v /var/lib/docker/volumes/portainer_data/_data/custom_templates:/var/lib/docker/volumes/portainer_data/_data/custom_templates:ro </span>
            <span style="display: block;">ghcr.io/fluxpointdev/devspace/agent:latest</span>
        </RadzenText>
        <br />
        <RadzenButton ButtonStyle="@(IsCopied ? ButtonStyle.Success : ButtonStyle.Info)" Shade="Shade.Dark" Text="Copy Command" Click="@CopyConnection" />
    </div>
}


<ServerSettings></ServerSettings>

<style>
    .settings-item {
        width: 120px;
        height: 120px;
    }

        .settings-item iconify-icon {
            font-size: 30px;
            margin-top: 16px;
            color: var(--rz-info);
        }

        .settings-item .rz-text-h6 {
            margin-top: 14px;
            font-size: 1.1rem;
            color: var(--rz-base-200) !important;
        }

    .rz-stack a {
        text-decoration: none !important;
    }

    .settings-item:hover {
        background-color: var(--rz-base-dark);
        outline: solid 1px var(--rz-secondary-dark) !important;
    }
</style>

<style>
    .settings-box .rz-align-items-normal .rz-text-body2 {
        text-overflow: "";
        overflow: hidden;
        white-space: nowrap;
    }

    .settings-box {
        background-color: rgba(43,44,54,0.8);
        width: 100% !important;
        padding: 10px;
        border-radius: 8px;
        margin-bottom: 10px;
    }

    .settings-icon {
        width: 40px;
        height: 40px;
    }

    .session-item {
        padding: 10px;
        padding-right: 10px;
        padding-left: 10px;
        padding-left: 20px;
        padding-right: 20px;
        border-radius: 8px;
        background-color: rgba(52,53,63,0.8) !important;
        min-height: 70px;
    }

        .session-item iconify-icon:first-child {
            width: 44px;
            height: 44px;
        }

        .session-item iconify-icon:nth-child(2) {
            width: 36px;
            height: 36px;
            margin-left: -26px;
            margin-bottom: -36px;
            background-color: #17171b;
            padding: 6px;
            border-radius: 100px;
        }

    .session-item-stat {
        margin-left: 120px !important;
        margin-top: -50px;
        margin-bottom: -50px;
    }

        .session-item-stat .rzi {
            font-size: 1rem;
            margin-right: 8px;
            vertical-align: sub;
        }

        .session-item-stat .rz-text-body2 {
            vertical-align: sub;
            font-weight: 500 !important;
        }
</style>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    public TeamData? Team => Session.Selected.Team?.Data;
    public TeamMemberData? Member => Session.Selected.Member;
    public ServerData? Server => Session.Selected.Server;

    public string? OwnerUser { get; set; }

    public SystemInfoResponse? Data { get; set; }

    public string GetEdgeConnectionCommand()
    {
        return ("docker run -d --name devspace-agent " +
 "--pull always " +
 "--restart on-failure:3 " +
 "-e EDGE_HOST={0} " +
 "-e EDGE_ID={1} " +
 "-e EDGE_KEY={2} " +
 "-v devspace_agent:/app/Data " +
 "-v /var/run/docker.sock:/var/run/docker.sock:ro " +
 "-v /var/lib/docker/volumes/portainer_data/_data/custom_templates:/var/lib/docker/volumes/portainer_data/_data/custom_templates:ro " +
 "ghcr.io/fluxpointdev/devspace/agent:latest"
        ).Replace("{0}", _Data.Config.Instance.PublicDomain)
        .Replace("{1}", Server.Id.ToString())
        .Replace("{2}", Server.AgentKey);
    }

    public bool IsCopied { get; set; }

    public async Task CopyConnection()
    {
        await JS.CopyTextAsync(GetEdgeConnectionCommand());
        IsCopied = true;
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Member == null || Server == null)
            return;

        if (_DB.Users.TryGetValue(Server.OwnerId, out PartialUserData? user))
            OwnerUser = user.UserName;
        else
            OwnerUser = "Unknown?";

        if (!Member.HasServerPermission(Team, Server, ServerPermission.ViewServer))
            return;

        SocketResponse<SystemInfoResponse?> Response = await Server.RunJsonAsync<SystemInfoResponse, DockerEvent>(Notifications, new DockerEvent(DockerEventType.SystemInfo));
        if (Response.IsSuccess)
        {
            Data = Response.Data;
            if (Server.TryGetWebSocket(out IAgent? agent) && agent is ClientAgent CA && CA.Discover != null && CA.Discover!.Version != Data.AgentVersion)
                CA.Discover!.Version = Data.AgentVersion;

            StateHasChanged();
        }
    }
}
