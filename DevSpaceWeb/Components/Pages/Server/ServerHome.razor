@using DevSpaceShared.Events.Docker
@using DevSpaceShared.Responses
@inject DialogService DialogService
@inject NavigationManager Nav

<PageTitle>@(Server?.Name ?? "Server") Home | @_Data.Config.Instance.Name</PageTitle>

<div class="dash-box dash-box-content">
    <div class="dash-box-header">
        <div class="dash-box-icon dash-box-back" onclick="history.back()">
            <span class="iconify" data-icon="mdi:server"></span>
            <span class="iconify" data-icon="mdi:arrow-left-thick"></span>
        </div>
        <RadzenText TextStyle="TextStyle.H6">Server</RadzenText>
    </div>
    @if (Member == null || Server == null || !Member.HasServerPermission(Team, Server, ServerPermission.ViewServer))
    {
        <br />
        <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
            You do not have permission for View Server
        </RadzenAlert>
    }
    else if (!Server.IsConnected)
    {
        <br />
        <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Darker" AllowClose="false" Size="AlertSize.Small">
            Failed to connect to the server.
        </RadzenAlert>
    }
    <br />
    <RadzenRow Gap="10px" RowGap="10px">
        <RadzenColumn SizeMD="6" SizeSM="12" class="settings-box">
            <h6>System</h6>
            <RadzenRow Gap="10px" RowGap="10px" class="mt-4">
                <RadzenColumn SizeSM="12">
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:information"></span>
                        <div>
                            <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-05">
                                Version
                            </RadzenText>
                            @if (Data != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @Data.OperatingSystem
                                </RadzenText>
                            }
                            else
                            {
                                <RadzenSkeleton></RadzenSkeleton>
                            }

                        </div>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                        <div>
                            <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:timer"></span>
                        </div>
                        <div style="overflow: hidden;">
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                Uptime
                            </RadzenText>
                            @if (Data != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @Data.GetUptimeText()
                                </RadzenText>
                            }
                            else
                            {
                                <RadzenSkeleton></RadzenSkeleton>
                            }
                        </div>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                        <div>
                            <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:wide-area-network"></span>
                        </div>
                        <div>
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                IP
                            </RadzenText>
                            @if (Data != null)
                            {
                                @if (Member != null && (Member.HasServerPermission(Team, Server, ServerPermission.ViewHostInfo) || Member.HasServerPermission(Team, Server, ServerPermission.ManageConnection)))
                                {
                                    <RadzenTextMask Value="@Server?.AgentIp" IsIp="true"></RadzenTextMask>
                                }
                                else
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        Hidden
                                    </RadzenText>
                                }
                            }
                            else
                            {
                                <RadzenSkeleton></RadzenSkeleton>
                            }

                        </div>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                        <div>
                            <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:cpu-64-bit"></span>
                        </div>
                        <div>
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                CPU
                            </RadzenText>
                            @if (Data != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @Data.CpuCount
                                </RadzenText>
                            }
                            else
                            {
                                <RadzenSkeleton></RadzenSkeleton>
                            }

                        </div>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                        <div>
                            <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:memory"></span>
                        </div>
                        <div>
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                Memory
                            </RadzenText>
                            @if (Data != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @Utils.ToPrettySize(Data.RamTotal)
                                </RadzenText>
                            }
                            else
                            {
                                <RadzenSkeleton></RadzenSkeleton>
                            }

                        </div>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                        <div>
                            <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:storage"></span>
                        </div>
                        <div>
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                Storage
                            </RadzenText>
                            @if (Data != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @($"{Utils.SizeSuffix(Data.StorageTotalSize - Data.StorageFreeSize, 0)} / {Utils.SizeSuffix(Data.StorageTotalSize, 0)} ({100 * (Data.StorageTotalSize - Data.StorageFreeSize) / Data.StorageTotalSize}%)")
                                </RadzenText>
                            }
                            else
                            {
                                <RadzenSkeleton></RadzenSkeleton>
                            }

                        </div>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                        <div>
                            <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:dot-net"></span>
                        </div>
                        <div>
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                Agent
                            </RadzenText>
                            @if (Data != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @($"v{Data.AgentVersion} (.NET {Data.AgentNET})")
                                </RadzenText>
                            }
                            else
                            {
                                <RadzenSkeleton></RadzenSkeleton>
                            }

                        </div>
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>
            @if (Data != null && !string.IsNullOrEmpty(Program.LatestAgentVersion) && Program.LatestAgentVersion != Data.AgentVersion)
            {
                <a target="_blank" href="https://docs.fluxpoint.dev/devspace/guides/agent-guides/install-dev-space-agent#update-dev-space-agent">
                    <RadzenAlert AlertStyle="AlertStyle.Success" class="mt-4" Icon="download" Size="AlertSize.Small" AllowClose="false" Variant="Variant.Filled" Shade="Shade.Darker">
                        <strong>@("v" + Program.LatestAgentVersion)</strong> agent is available to install on this server.
                    </RadzenAlert>
                </a>
            }
        </RadzenColumn>
        <RadzenColumn SizeMD="6" SizeSM="12" class="settings-box">
            <h6>Docker</h6>
            <RadzenRow Gap="10px" RowGap="10px" class="mt-4">
                <RadzenColumn SizeSM="12">
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <span class="iconify settings-icon" style="color: var();" data-icon="mdi:docker"></span>
                        <div>
                            <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-05">
                                Version
                            </RadzenText>
                            @if (Data != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @Data.Docker.DockerVersion
                                </RadzenText>
                            }
                            else
                            {
                                <RadzenSkeleton></RadzenSkeleton>
                            }

                        </div>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/stacks")">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="ri:stack-fill"></span>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Stacks
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @Data.Docker.Stacks
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </a>

                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/containers")">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="ri:box-3-fill"></span>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Containers
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @Data.Docker.AllContainers
                                    </RadzenText>
                                    <div class="session-item-stat">
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            <RadzenIcon Icon="power_settings_new" IconStyle="IconStyle.Success"></RadzenIcon> @Data.Docker.RunningContainers
                                        </RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body2">
                                            <RadzenIcon Icon="power_settings_new" IconStyle="IconStyle.Danger"></RadzenIcon> @Data.Docker.StoppedContainers
                                        </RadzenText>
                                    </div>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </a>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/images")">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:folder-image"></span>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Images
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @Data.Docker.Images
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </a>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/volumes")">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:storage"></span>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Volumes
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @Data.Docker.Volumes
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </a>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/networks")">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:local-area-network"></span>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Networks
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @Data.Docker.Networks
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </a>
                </RadzenColumn>
                <RadzenColumn SizeMD="6" SizeSM="12" class="session-item">
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/plugins")">
                        <RadzenStack Gap="12px" Orientation="Orientation.Horizontal">
                            <div>
                                <span class="iconify settings-icon" style="color: #EAEBEC;" data-icon="mdi:power-plug"></span>
                            </div>
                            <div>
                                <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">
                                    Plugins
                                </RadzenText>
                                @if (Data != null)
                                {
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @Data.Docker.Plugins
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenSkeleton></RadzenSkeleton>
                                }

                            </div>
                        </RadzenStack>
                    </a>
                </RadzenColumn>
            </RadzenRow>
        </RadzenColumn>
    </RadzenRow>
</div>


<ServerSettings></ServerSettings>

<style>
    .settings-item {
        width: 120px;
        height: 120px;
    }

        .settings-item .iconify {
            width: 30px;
            height: 30px;
            margin-top: 16px;
            color: var(--rz-info);
        }

        .settings-item .rz-text-h6 {
            margin-top: 14px;
            font-size: 1.1rem;
            color: var(--rz-base-200) !important;
        }

    .rz-stack a {
        text-decoration: none !important;
    }

    .settings-item:hover {
        background-color: var(--rz-base-dark);
        outline: solid 1px var(--rz-secondary-dark) !important;
    }
</style>

<style>
    .settings-box .rz-align-items-normal .rz-text-body2 {
        text-overflow: "";
        overflow: hidden;
        white-space: nowrap;
    }

    .settings-box {
        background-color: rgba(43,44,54,0.8);
        width: 100% !important;
        padding: 10px;
        border-radius: 8px;
        margin-bottom: 10px;
    }

    .settings-icon {
        width: 40px;
        height: 40px;
    }

    .session-item {
        padding: 10px;
        padding-right: 10px;
        padding-left: 10px;
        padding-left: 20px;
        padding-right: 20px;
        border-radius: 8px;
        background-color: rgba(52,53,63,0.8) !important;
        min-height: 70px;
    }

        .session-item .iconify:first-child {
            width: 44px;
            height: 44px;
        }

        .session-item .iconify:nth-child(2) {
            width: 36px;
            height: 36px;
            margin-left: -26px;
            margin-bottom: -36px;
            background-color: #17171b;
            padding: 6px;
            border-radius: 100px;
        }

    .session-item-stat {
        margin-left: 120px !important;
        margin-top: -50px;
        margin-bottom: -50px;
    }

        .session-item-stat .rzi {
            font-size: 1rem;
            margin-right: 8px;
            vertical-align: sub;
        }

        .session-item-stat .rz-text-body2 {
            vertical-align: sub;
            font-weight: 500 !important;
        }
</style>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    public TeamData? Team => Session.Selected.Team?.Data;
    public TeamMemberData? Member => Session.Selected.Member;
    public ServerData? Server => Session.Selected.Server;

    public string? OwnerUser { get; set; }

    public SystemInfoResponse? Data { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        if (Member == null || Server == null)
            return;

        if (_DB.Users.TryGetValue(Server.OwnerId, out PartialUserData? user))
            OwnerUser = user.UserName;
        else
            OwnerUser = "Unknown?";

        if (!Member.HasServerPermission(Team, Server, ServerPermission.ViewServer))
            return;

        var Response = await Server.RecieveJsonAsync<SystemInfoResponse>(new DockerEvent(DockerEventType.SystemInfo));
        if (Response.IsSuccess)
        {
            Data = Response.Data;
            if (Data != null && Server.GetWebSocket().Discover.Version != Data.AgentVersion)
                Server.GetWebSocket().Discover.Version = Data.AgentVersion;

            StateHasChanged();
        }

    }
}
