@using DevSpaceWeb.Models
@using DevSpaceWeb.Models.Docker
@inject DialogService Dialogs

<PageTitle>App Templates | @_Data.Config.Instance.Name</PageTitle>

<div class="dash-box dash-box-content">
    <div class="dash-box-header">
        <div class="dash-box-icon dash-box-back" onclick="history.back()">
            <span class="iconify" data-icon="mdi:application-brackets"></span>
            <span class="iconify" data-icon="mdi:arrow-left-thick"></span>
        </div>
        <RadzenText TextStyle="TextStyle.H6">App Templates</RadzenText>
    </div>
    <RadzenBreadCrumb class="mt-2">
        <RadzenBreadCrumbItem Path="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers")" Text="Servers" />
        <RadzenBreadCrumbItem Path="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl)" Text="@Session.Selected.Team?.Server?.Data.Name" />
        <RadzenBreadCrumbItem Text="Templates" />
    </RadzenBreadCrumb>
    @if (Member == null || !Member.HasDockerPermission(Team, Server, DockerPermission.UseAppTemplates))
    {
        <br />
        <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
            You do not have permission for Use App Templates
        </RadzenAlert>
    }
    else
    {
        <br />
        <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + Session.Selected.Team?.Server?.VanityUrl + "/templates/custom")"><RadzenButton Variant="Variant.Filled" Text="Custom Templates" ButtonStyle="ButtonStyle.Info" Shade="Shade.Dark" /></a>
        <br />
    }

</div>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    public TeamData? Team => Session.Selected.Team?.Data;
    public TeamMemberData? Member => Session.Selected.Member;
    public ServerData? Server => Session.Selected.Server;

    public async Task SetupTemplate()
    {
        await Dialogs.ShowDynamicFormAsync<SetupTemplateStackModel>("Setup Anyviz Cloud Adaptor", new SetupTemplateStackModel(), async (SetupTemplateStackModel data) =>
        {
            if (Member == null || !Member.HasDockerPermission(Team, Server, DockerPermission.DockerAdministrator))
                return "You do not have permission for Docker Administrator";

            return null;
        });
    }
}
