@page "/user/account"
@using System.Collections.Specialized
@inject NavigationManager Nav

<PageTitle>Account Settings | @_Data.Config.Instance.Name</PageTitle>
<div class="dash-box dash-box-content">
    <div class="dash-box-header">
        <div class="dash-box-icon"><span class="iconify" data-icon="mdi:gear"></span></div>
        <RadzenText TextStyle="TextStyle.H6">My Account</RadzenText>
    </div>

    @if (!string.IsNullOrEmpty(ConnectionLink))
    {
        @switch (ConnectionLink)
        {
            case "PreviewMode":
                <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
                    Can't connect social account, not available in preview mode.
                </RadzenAlert>
                break;
            case "Disabled":
                <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
                    Can't connect social account, social registration is disabled.
                </RadzenAlert>
                break;
            case "Failed":
                <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
                    Can't connect social account, service has failed.
                </RadzenAlert>
                break;
            case "EmailMissing":
                <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
                    Can't connect social account, service not providing an email address.
                </RadzenAlert>
                break;
            case "NotEmailMatch":
                <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
                    Can't connect social account, email address does not match.
                </RadzenAlert>
                break;
        }
    }
    <br />

    <RadzenTabs>
        <Tabs>
            <RadzenTabsItem Text="Profile">
                <AccountSettingsProfile></AccountSettingsProfile>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Security">
                <AccountSettingsSecurity></AccountSettingsSecurity>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Connections">
                <AccountSettingsConnections></AccountSettingsConnections>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</div>

<style>


    .settings-box {
    background-color: rgba(43,44,54,0.8);
    width: 100% !important;
    padding: 10px;
    border-radius: 8px;
    margin-bottom: 10px;
    }
</style>

<style>
    .passkey-item {
    padding: 10px;
    padding-left: 20px;
    padding-right: 20px;
    border-radius: 8px;
    background-color: rgba(52,53,63,0.8) !important;
    }

    .passkey-item img {
    margin-right: 20px;
    height: 24px;
    margin-top: 18px;
    }


    .passkey-item .iconify {
    width: 24px;
    height: 24px;
    color: #f64e62 !important;
    }


    .session-item {
    padding: 10px;
    padding-right: 10px;
    padding-left: 10px;
    padding-left: 20px;
    padding-right: 20px;
    border-radius: 8px;
    background-color: rgba(52,53,63,0.8) !important;
    min-height: 70px;
    }

    .session-item .iconify:first-child {
    width: 44px;
    height: 44px;
    }

    .session-item .iconify:nth-child(2) {
    width: 36px;
    height: 36px;
    margin-left: -26px;
    margin-bottom: -36px;
    background-color: #17171b;
    padding: 6px;
    border-radius: 100px;
    }
</style>



@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    public string? ConnectionLink { get; set; }

    protected override async Task OnInitializedAsync()
    {
        NameValueCollection query = Nav.ParseQuery();
        ConnectionLink = query["link"];
    }
}
