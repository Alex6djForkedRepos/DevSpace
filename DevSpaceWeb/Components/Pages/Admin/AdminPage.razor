@page "/admin/{page?}"

@if (!IsAdmin)
{
    <PageTitle>Admin Auth | @_Data.Config.Instance.Name</PageTitle>
    <div class="dash-box dash-box-content">
        <h6>@_Data.Config.Instance.Name Admin</h6>
        <RadzenText TextStyle="TextStyle.Body2">
            Enter your Admin Key here, you can find this in /Data/Config.json
        </RadzenText>
        @if (InvalidKey)
        {
            <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false" Size="AlertSize.Small">
                Invalid admin key entered.
            </RadzenAlert>
        }
        else
        {
            <br />
        }
        <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-05">Admin Key</RadzenText>
        <RadzenPassword @bind-Value="AdminKeyInput" Style="width: 100%" aria-label="Admin key TextBox" AutoCompleteType="AutoCompleteType.Off" maxlength="100" />
        <br />
        <br />
        <RadzenButton Click="@CheckAdminKey" ButtonStyle="ButtonStyle.Success" Shade="Shade.Dark" Text="Check" />
    </div>
}
else if (!_Data.Config.IsFullySetup)
{
    <PageTitle>Setup Instance | @_Data.Config.Instance.Name</PageTitle>
    <AdminSetup></AdminSetup>
}
else
{
    <PageTitle>Admin Settings | @_Data.Config.Instance.Name</PageTitle>
    @switch (page)
    {
        case "":
        case null:
            <AdminSettings></AdminSettings>
            break;
        case "database":
            <AdminDatabase></AdminDatabase>
            break;
        case "instance":
            <AdminInstanceSettings></AdminInstanceSettings>
            break;
        case "email":
            <AdminEmailSettings></AdminEmailSettings>
            break;
        case "dev_services":
            <AdminDevServices></AdminDevServices>
            break;
        case "dev_design":
            <AdminDevDesign></AdminDevDesign>
            break;
        case "templates":
            <AdminEmailTemplates></AdminEmailTemplates>
            break;
    }
}


@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; }

    [Parameter]
    public string page { get; set; }

    public bool IsAdmin { get; set; }
    public string AdminKeyInput { get; set; }

    public bool InvalidKey { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AuthUser? User = await Session.GetCurrentUserAsync();
        if (User != null)
            IsAdmin = User.IsInstanceAdmin;
    }

    public void CheckAdminKey()
    {
        if (string.IsNullOrEmpty(AdminKeyInput) || AdminKeyInput != _Data.Config.AdminKey)
            InvalidKey = true;
        else
            IsAdmin = true;
    }
}
