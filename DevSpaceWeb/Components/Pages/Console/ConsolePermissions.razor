@using DevSpaceWeb.Data.Consoles

<PageTitle>Console Permissions | @_Data.Config.Instance.Name</PageTitle>

<div class="dash-box dash-box-content">
    <div class="dash-box-header">
        <div class="dash-box-icon dash-box-back" onclick="history.back()">
            <iconify-icon icon="mdi:shield-key"></iconify-icon>
            <iconify-icon icon="mdi:arrow-left-thick"></iconify-icon>
        </div>
        <RadzenText TextStyle="TextStyle.H6">Permissions</RadzenText>
    </div>
    <RadzenBreadCrumb class="mt-2">
        <RadzenBreadCrumbItem Path="@("/teams/" + Session.Selected.Team?.VanityUrl + "/consoles")" Text="Consoles" />
        <RadzenBreadCrumbItem Path="@("/teams/" + Session.Selected.Team?.VanityUrl + "/consoles/" + Session.Selected.Team?.Resource?.VanityUrl)" Text="@Session.Selected.Team?.Resource?.Data.Name" />
        <RadzenBreadCrumbItem Text="Permissions" />
    </RadzenBreadCrumb>

    @if (Member == null || !Member.HasConsolePermission(Team, Console, ConsolePermission.ViewPermissions))
    {
        <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
            You do not have permission for View Permissions
        </RadzenAlert>
    }
    else
    {
        <br />
        <PermissionsOverride Resource="@Console" PermissionType="PermissionType.Console"></PermissionsOverride>
    }
</div>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    public TeamData? Team => Session.Selected.Team?.Data;
    public ConsoleData? Console => Session.Selected.Resource as ConsoleData;
    public TeamMemberData? Member => Session.Selected.Member;


    // protected override async Task OnInitializedAsync()
    // {
        
    // }
}
