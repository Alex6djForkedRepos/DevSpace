@using DaRT
@using System.Linq.Dynamic.Core
@using DevSpaceWeb.Data.Consoles
@using DevSpaceWeb.Models.Consoles
@using Newtonsoft.Json.Linq
@using System.Text
@inject ContextMenuService ContextMenuService
@inject DialogService Dialog

<PageTitle>Console Admins | @_Data.Config.Instance.Name</PageTitle>

<div class="dash-box">
    <div class="dash-box-header dash-box-content">
        <div class="dash-box-icon"><span class="iconify" data-icon="mdi:account-supervisor"></span></div>
        <RadzenText TextStyle="TextStyle.H6">Rcon Connections</RadzenText>
    </div>
    <RadzenBreadCrumb class="mt-2 ml-4" style="margin-top: -2px !important;">
        <RadzenBreadCrumbItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/consoles")" Text="Consoles" />
        <RadzenBreadCrumbItem Path="@("/teams/" + Session.Selected.Team.VanityUrl + "/consoles/" + Session.Selected.Team.Console.VanityUrl)" Text="@Session.Selected.Team.Console.Data.Name" />
        <RadzenBreadCrumbItem Text="Connections" />
    </RadzenBreadCrumb>

    @if (!Member.HasConsolePermission(Team, Console, ConsolePermission.ViewConnections))
    {
        <div class="dash-box-content">
            <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Dark" AllowClose="false">
                You do not have permission for View Connections
            </RadzenAlert>
        </div>
    }
    else
    {
        <br />
        <RadzenDataGrid Count="@ConnectionCount" Data="@Connections" LoadData="@LoadData"
                        PagerHorizontalAlign="HorizontalAlign.Center" AllowPaging="true" PageSize="15" GridLines="DataGridGridLines.Horizontal">
            <Columns>
                <RadzenDataGridColumn Title="ID" Width="60px">
                    <Template>
                        <RadzenText TextStyle="TextStyle.Body2">@context.Id</RadzenText>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Title="IP">
                    <Template>
                        <RadzenTextMask Value="@context.Ip" IsIp="true"></RadzenTextMask>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>

        </RadzenDataGrid>
    }
</div>


@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; }

    public TeamData Team => Session.Selected.Team.Data;
    public ConsoleData Console => Session.Selected.Console;
    public TeamMemberData Member => Session.Selected.Member;

    public IEnumerable<RconAdmin> Connections { get; set; }
    public int ConnectionCount { get; set; }

    public string GetMask(string value)
    {
        bool FirstDot = false;
        StringBuilder result = new StringBuilder();
        foreach (char c in value)
        {
            if (c == '.')
            {
                result.Append(c);
                FirstDot = true;
            }
            else
            {
                if (FirstDot)
                    result.Append('*');
                else
                    result.Append(c);
            }
        }
        return result.ToString();
    }

    void LoadData(LoadDataArgs args)
    {
        if (_Data.BattleyeRcons.TryGetValue(Console.Id, out RCon? rc))
        {
            if (rc.IsConnected)
            {
                var query = rc.GetAdmins().AsQueryable();

                ConnectionCount = query.Count();
                Connections = query.Skip(args.Skip.Value).Take(args.Top.Value).ToList();
            }
            else
            {
                ConnectionCount = 0;
                Connections = new List<RconAdmin>();
            }

            StateHasChanged();
        }
        else
        {
            ConnectionCount = 0;
            Connections = new List<RconAdmin>();
        }

    }
}
