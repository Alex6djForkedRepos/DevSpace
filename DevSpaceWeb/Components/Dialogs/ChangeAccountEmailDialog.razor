@using DevSpaceWeb.Services
@inject UserManager<AuthUser> UserManager
@inject EmailService EmailService
@inject NavigationManager NavigationManager
@inject Radzen.DialogService dialogService

<RadzenStack Gap="0.5rem" Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%;">
    <RadzenStack>
        <p>Changing your email address will require verification with the current email address.</p>
        <br />
        <RadzenLabel Text="Email" class="rz-my-0"></RadzenLabel>
        <RadzenTextBox @bind-Value="Email" Style="width: 100%" aria-label="Email TextBox" autocomplete="off" autofocus inputmode="email"
                       autocapitalize="none" maxlength="100" />
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
        <RadzenButton Click="@((args) => dialogService.Close(false))" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base" Text="Cancel" Style="width: 90px" />
        <RadzenButton Click="@Submit" Variant="Variant.Text" ButtonStyle="ButtonStyle.Success" Text="Submit" Style="width: 90px" />
    </RadzenStack>
</RadzenStack>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; }

    public string Email { get; set; }

    async Task Submit()
    {
        if (Program.IsPreviewMode)
        {
            Session.ShowPreviewModeNotice();
            return;
        }

        AuthUser? user = await Session.GetCurrentUserAsync();
        if (user == null)
            return;

        if (user.Email.Equals(Email, StringComparison.OrdinalIgnoreCase))
            return;

        AuthUser? FindUser = await UserManager.FindByEmailAsync(Email);
        if (FindUser != null)
        {
            dialogService.Close(false);
            return;
        }
        var Code = await UserManager.GenerateChangeEmailTokenAsync(user, Email);
        Code = Uri.EscapeDataString(Code);

        string EmailEscape = Uri.EscapeDataString(Email);
        await EmailService.SendAccountConfirm(user, (NavigationManager.BaseUri + "auth/account/changeEmail?email=" + EmailEscape + "&token=" + Code));

        dialogService.Close(true);
    }
}
