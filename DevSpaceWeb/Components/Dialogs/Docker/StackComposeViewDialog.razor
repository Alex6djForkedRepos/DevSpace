@using DevSpaceShared.Events.Docker
@using DevSpaceShared.Responses
@using DevSpaceWeb.Models.Accounts
@using DevSpaceWeb.Models.Defaults
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json.Linq
@inject UserManager<AuthUser> UserManager
@inject Radzen.DialogService dialogService

<PageTitle>Stack Compose | @_Data.Config.Instance.Name</PageTitle>

<RadzenStack Gap="0.5rem" Orientation="Orientation.Vertical" Style="height: 100%;">
    <RadzenStack JustifyContent="JustifyContent.Start" Gap="0">
        <Editor @ref="@Editor" Value="@Compose" FileName="@(StackName + ".yml")" Language="yaml" ReadOnly="true" ScrollBeyondLastLine="false" HeightOverflow="300"></Editor>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
        <RadzenButton Click="@((args) => dialogService.Close(false))" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base" Text="Close" Style="width: 90px" />
    </RadzenStack>
</RadzenStack>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    [Parameter, EditorRequired]
    public string StackName { get; set; } = null!;

    [Parameter, EditorRequired]
    public string? Compose { get; set; } = null;

    private Editor Editor = null!;
}
