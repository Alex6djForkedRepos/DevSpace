@using DevSpaceShared.Data
@using DevSpaceShared.Events.Docker
@using DevSpaceWeb.Agents
@using DevSpaceWeb.Models.Accounts
@using DevSpaceWeb.Models.Defaults
@using DevSpaceWeb.Models.Setup
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json.Linq
@using System.Net
@using global::Docker.DotNet.Models
@inject UserManager<AuthUser> UserManager
@inject DialogService Dialogs
@inject NotificationService Notifications

<PageTitle>Server Setup | @_Data.Config.Instance.Name</PageTitle>

<RadzenStack Gap="0.5rem" Orientation="Orientation.Vertical" Style="height: 100%;">
    <RadzenStack JustifyContent="JustifyContent.Start">
        <RadzenText TextStyle="TextStyle.Body1" class="ml-2">Select an agent type.</RadzenText>
        <div class="server-item gap-2" style="display: flex; vertical-align: middle; cursor: pointer;" @onclick="@(() => Dialogs.Close(0))">
            <div class="server-item-icon flex-none d-flex">
                <span class="iconify" data-icon="mdi:access-point-network"></span>
            </div>
            <div>
                <RadzenText TextStyle="TextStyle.H6" class="mt-3 ml-2">
                    Edge Agent
                </RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="ml-2">Your server will connect to the Dev Space domain.</RadzenText>
            </div>
        </div>
        <div class="server-item gap-2" style="display: flex; vertical-align: middle; cursor: pointer;" @onclick="@(() => Dialogs.Close(1))">
            <div class="server-item-icon flex-none d-flex">
                <span class="iconify" data-icon="mdi:local-area-network-connect"></span>
            </div>
            <div>
                <RadzenText TextStyle="TextStyle.H6" class="mt-3 ml-2">
                    Client Agent
                </RadzenText>
                <RadzenText TextStyle="TextStyle.Body2" class="ml-2">Dev Space will directly connect to your server IP with an open port.</RadzenText>
            </div>
        </div>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
        <RadzenButton Click="@((args) => { Dialogs.Close(); })" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base" Text="Close" Style="width: 90px" />
    </RadzenStack>
</RadzenStack>


@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    public TeamData? Team => Session.Selected.Team?.Data;
    public TeamMemberData? Member => Session.Selected.Member;
    public ServerData? Server => Session.Selected.Server;

    
}
