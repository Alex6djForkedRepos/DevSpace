@using DevSpaceWeb.Data.Consoles
@using DevSpaceWeb.Models.Accounts
@using DevSpaceWeb.Models.Defaults
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Identity
@inject UserManager<AuthUser> UserManager
@inject Radzen.DialogService dialogService

<PageTitle>Member Resources | @_Data.Config.Instance.Name</PageTitle>

<RadzenStack Gap="0.5rem" Orientation="Orientation.Vertical" Style="height: 100%;">
    <RadzenStack JustifyContent="JustifyContent.Start">
        @if (Session.Selected.Member == null || !Session.Selected.Member.IsGlobalAdministrator(Team))
        {
            <RadzenAlert AlertStyle="AlertStyle.Warning" Shade="Shade.Darker" AllowClose="false" Size="AlertSize.Small">
                Some resources may not be listed with your current access.
            </RadzenAlert>
        }

        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Left" Wrap="FlexWrap.Wrap" Gap="0.2rem">
            <RadzenStack Gap="6px" class="permission-grid-box">
                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-1"><span class="iconify" data-icon="mdi:server"></span> Servers</RadzenText>

                @foreach (ServerData i in _DB.Servers.Cache.Values.Where(x => Session.Selected.Member != null && Session.Selected.Member.HasServerPermission(Team, x, ServerPermission.ViewServer) && Member.HasServerPermission(Team, x, ServerPermission.ViewServer)))
                {
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + i.GetVanityUrlOrId() + "/home")">
                        <div class="server-item">
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-0">@i.Name</RadzenText>
                        </div>
                    </a>
                }
            </RadzenStack>

            <RadzenStack Gap="6px" class="permission-grid-box">
                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-1"><span class="iconify" data-icon="mdi:docker"></span> Docker</RadzenText>

                @foreach (ServerData i in _DB.Servers.Cache.Values.Where(x => Session.Selected.Member != null && Session.Selected.Member.HasDockerContainerPermission(Team, x, DockerContainerPermission.ViewContainers) && Member.HasDockerContainerPermission(Team, x, DockerContainerPermission.ViewContainers)))
                {
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/servers/" + i.GetVanityUrlOrId() + "/home")">
                        <div class="server-item">
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-0">@i.Name</RadzenText>
                        </div>
                    </a>
                }
            </RadzenStack>

            <RadzenStack Gap="6px" class="permission-grid-box">
                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-1"><span class="iconify" data-icon="mdi:web"></span> Websites</RadzenText>

                @foreach (WebsiteData i in _DB.Websites.Cache.Values.Where(x => Session.Selected.Member != null && Session.Selected.Member.HasWebsitePermission(Team, x, WebsitePermission.ViewWebsite) && Member.HasWebsitePermission(Team, x, WebsitePermission.ViewWebsite)))
                {
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/websites/" + i.GetVanityUrlOrId() + "/home")">
                        <div class="server-item">
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-0">@i.Name</RadzenText>
                        </div>
                    </a>
                }
            </RadzenStack>

            <RadzenStack Gap="6px" class="permission-grid-box">
                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-1"><span class="iconify" data-icon="mdi:lightbulb"></span> Projects</RadzenText>

                @foreach (ProjectData i in _DB.Projects.Cache.Values.Where(x => Session.Selected.Member != null && Session.Selected.Member.HasProjectPermission(Team, x, ProjectPermission.ViewProject) && Member.HasProjectPermission(Team, x, ProjectPermission.ViewProject)))
                {
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/projects/" + i.GetVanityUrlOrId() + "/home")">
                        <div class="server-item">
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-0">@i.Name</RadzenText>
                        </div>
                    </a>
                }
            </RadzenStack>

            <RadzenStack Gap="6px" class="permission-grid-box">
                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-1"><span class="iconify" data-icon="mdi:warning"></span> Logs</RadzenText>

                @foreach (LogData i in _DB.Logs.Cache.Values.Where(x => Session.Selected.Member != null && Session.Selected.Member.HasLogPermission(Team, x, LogPermission.ViewLog) && Member.HasLogPermission(Team, x, LogPermission.ViewLog)))
                {
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/logs/" + i.GetVanityUrlOrId() + "/home")">
                        <div class="server-item">
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-0">@i.Name</RadzenText>
                        </div>
                    </a>
                }
            </RadzenStack>

            <RadzenStack Gap="6px" class="permission-grid-box">
                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-mb-05"><span class="iconify" data-icon="mdi:console"></span> Consoles</RadzenText>

                @foreach (ConsoleData i in _DB.Consoles.Cache.Values.Where(x => Session.Selected.Member != null && Session.Selected.Member.HasConsolePermission(Team, x, ConsolePermission.ViewConsole) && Member.HasConsolePermission(Team, x, ConsolePermission.ViewConsole)))
                {
                    <a href="@("/teams/" + Session.Selected.Team?.VanityUrl + "/consoles/" + i.GetVanityUrlOrId() + "/home")">
                        <div class="server-item">
                            <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-0">@i.Name</RadzenText>
                        </div>
                    </a>
                }
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
        <RadzenButton Click="@((args) => dialogService.Close(false))" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base" Text="Close" Style="width: 90px" />
    </RadzenStack>
</RadzenStack>

<style>
    .permission-grid-box {
        width: 260px;
        padding: 4px;
        padding-left: 8px;
        padding-right: 8px !important;
        padding-bottom: 16px;
        background-color: #242527 !important;
        margin-right: 4px;
        margin-bottom: 4px;
        box-shadow: var(--rz-card-shadow);
        min-height: 80px;
        
    }

        .permission-grid-box .rz-text-subtitle1 {
            text-align: center !important;
            display: inline-block !important;
            margin-bottom: 14px !important;
        }

        .permission-grid-box span {
            display: block;
        }

        .permission-grid-box .iconify {
            width: 22px;
            height: 22px;
            margin-right: 6px;
            margin-top: -2px;
        }

    .server-item {
        background-color: #21262d !important;
        border-radius: 6px;
        border: 1px solid rgba(0,135,201,0.3) !important;
        padding: 6px;
        padding-left: 10px;
        cursor: pointer;
    }

        .server-item:hover {
            border-color: rgba(0,135,201,0.5) !important;
        }
</style>

@code {
    [CascadingParameter]
    private SessionProvider Session { get; set; } = null!;

    public TeamData? Team => Member.Team;

    [Parameter]
    public TeamMemberData Member { get; set; }
}
